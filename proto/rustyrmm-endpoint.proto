syntax = "proto3";
package rustyrmm.endpoint;

service Management {
    rpc RegisterEndpoint(EndpointRegistration) returns (EndpointRegistrationResponse);
    rpc UpdateEndpoint(EndpointUpdate) returns (EndpointUpdateResponse);
}

message EndpointRegistration {
    string hostname = 1;
    string system_uuid = 2;
}

message EndpointUpdate {
    RustyRmmId id = 1;
    string hostname = 2;
    string system_uuid = 3;
    OsInfo os = 4;
    CpuInfo cpu = 5;
    MemInfo memory = 6;
    DiskInfo disks = 7;
    NetInfo ips = 8;
    UpdateStatus updates = 9;
    ClientVer client_version = 10;
}

message RustyRmmId {
    string uuid = 1;
}

message OsInfo {
    string full_name = 1;
    string family = 2;
    string version = 3;
    string virt_system = 4;
    string virt_role = 5;
    string tz = 6;
}

message CpuInfo {
    string family = 1;
    string model = 2;
    uint32 core_count = 3;
    uint32 thread_count = 4;
}

message MemInfo {
    string total = 1;
    uint64 used = 2;
}

message DiskInfo {
    repeated Disk disks = 1;
}

message Disk {
    string name = 1;
    uint64 size = 2;
    uint64 used = 3;
    float io_usage = 4;
}

message NetInfo {
    repeated NetInterface ifs = 1;
}

message NetInterface {
    string name = 1;
    uint64 capacity = 2;
    float utilization = 3;
    repeated Ip4Addr ip4 = 4;
    repeated Ip6Addr ip6 = 5;
}

message Ip4Addr {
    string ip = 1;
}

message Ip6Addr {
    string ip = 1;
}

message UpdateStatus {
    uint32 security = 1;
    uint32 regular  = 2;
}

message ClientVer {
    string version = 1;
}

enum ResponseStatus {
    STATUS_UNSPECIFIED = 0;
    STATUS_OK = 1;
    STATUS_ERR = 2;
}

message EndpointRegistrationResponse {
    ResponseStatus status = 1;
    string system_uuid = 2;
    RustyRmmId id = 3;
}

message EndpointUpdateResponse {
    ResponseStatus status = 1;
    RustyRmmId id = 2;
}