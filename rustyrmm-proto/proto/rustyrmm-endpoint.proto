syntax = "proto3";
package endpoint_registration;

service RegistrationService {
    rpc RegisterEndpoint(EndpointRegistration) returns (EndpointRegistrationResponse);
    rpc UpdateEndpoint(EndpointUpdate) returns (EndpointUpdateResponse);
}

message EndpointRegistration {
    string hostname = 1;
    string system_sku_number = 2;
    string system_serial_number = 3;
}

message EndpointUpdate {
    RustyRmmId id = 1;
    string hostname = 2;
    string system_sku_number = 3;
    string system_serial_number = 4;
    OsInfo os = 5;
    CpuInfo cpu = 6;
    MemInfo memory = 7;
    DiskInfo disks = 8;
    NetInfo net = 9;
    UpdateStatus updates = 10;
    ClientVer client_version = 11;
}

message RustyRmmId {
    string uuid = 1;
}

message OsInfo {
    string full_name = 1;
    string family = 2;
    string version = 3;
    string kernel_version = 4;
    string virt_system = 5;
    string virt_role = 6;
    string tz = 7;
    string machine_id = 8;
}

message CpuInfo {
    uint32 core_count = 1;
    uint32 thread_count = 2;
    repeated Cpu cpus = 3;
}

message Cpu {
    string name = 1;
    string vendor_id = 2;
    string brand = 3;
    string frequency = 4;
}

message MemInfo {
    uint64 total = 1;
    uint64 used = 2;
}

message DiskInfo {
    repeated Disk disks = 1;
}

enum DiskType {
    TYPE_UNKNOWN = 0;
    TYPE_HDD = 1;
    TYPE_SSD = 2;
}

message Disk {
    string name = 1;
    DiskType disk_type = 2;
    string filesystem = 3;
    string mount_point = 4;
    uint64 size = 5;
    uint64 free = 6;
}

message NetInfo {
    repeated NetInterface ifs = 1;
}

message NetInterface {
    string name = 1;
    string mac = 2;
    repeated Ip4Addr ip4 = 4;
    repeated Ip6Addr ip6 = 5;
}

message Ip4Addr {
    string ip = 1;
}

message Ip6Addr {
    string ip = 1;
}

message UpdateStatus {
    uint32 security = 1;
    uint32 regular  = 2;
}

message ClientVer {
    string version = 1;
}

enum ResponseStatus {
    STATUS_UNSPECIFIED = 0;
    STATUS_OK = 1;
    STATUS_ERR = 2;
}

message EndpointRegistrationResponse {
    ResponseStatus status = 1;
    RustyRmmId id = 2;
}

message EndpointUpdateResponse {
    ResponseStatus status = 1;
    RustyRmmId id = 2;
    uint32 updated = 3;
}